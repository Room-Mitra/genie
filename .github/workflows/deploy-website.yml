name: Deploy website via SSM
on:
  push:
    branches: [main, chai/ssm-code-deploy]
    # paths: ['website/**']

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ap-south-1
  ARTIFACT_BUCKET: roommitra-codedeploy
  INSTANCE_TAG_KEY: Name
  INSTANCE_TAG_VALUE: roommitra-ec2
  SERVICE_PATH: /opt/roommitra/website
  PM2_NAME: website

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502
        with:
          role-to-assume: arn:aws:iam::086325458599:role/codedeploy
          aws-region: ${{ env.AWS_REGION }}

      - name: Zip website folder
        run: |
          cd website
          zip -r ../website-${{ github.sha }}.zip . -x "*.git*"

      - name: Upload artifact to S3
        run: aws s3 cp website-${{ github.sha }}.zip s3://${{ env.ARTIFACT_BUCKET }}/website-${{ github.sha }}.zip

      - name: Find instance by tag
        id: find
        run: |
          ID=$(aws ec2 describe-instances \
            --filters "Name=tag:${INSTANCE_TAG_KEY},Values=${INSTANCE_TAG_VALUE}" "Name=instance-state-name,Values=running" \
            --query "Reservations[0].Instances[0].InstanceId" --output text)
          echo "instance_id=$ID" >> $GITHUB_OUTPUT

      - name: Deploy via SSM
        run: |
          aws ssm send-command \
            --instance-ids "${{ steps.find.outputs.instance_id }}" \
            --document-name "AWS-RunShellScript" \
            --comment "Deploy website ${{ github.sha }}" \
            --parameters '{
              "runAsEnabled": ["true"],
              "runAsUser": ["appuser"],
              "commands": [
                "set -euo pipefail",
                "export HOME=/home/appuser",
                "export PATH=$HOME/.local/bin:/usr/local/bin:/usr/bin:/bin",
                "mkdir -p /opt/roommitra/tmp /opt/roommitra/website/.deploy",
                "aws s3 cp s3://roommitra-codedeploy/website-b44fc1ad39af1a221a68f1d234ad792ece24fffe.zip /opt/roommitra/tmp/website.zip",
                "rm -rf /opt/roommitra/website/.deploy/*",
                "unzip -o /opt/roommitra/tmp/website.zip -d /opt/roommitra/website/.deploy",
                "rm -f /opt/roommitra/tmp/website.zip",
                "cd /opt/roommitra/website/.deploy",
                "node -v && npm -v || true",
                "npm ci",
                "npm run build",
                "rsync -a --delete /opt/roommitra/website/.deploy/ /opt/roommitra/website/",
                "command -v pm2 >/dev/null || npm i -g pm2",
                "pm2 start /opt/roommitra/website/server-start.sh --name website || pm2 reload website --update-env",
                "pm2 save"
              ]
            }'
